{
  "name": "node.bittrex.api",
  "version": "0.1.6",
  "description": "Node Bittrex API - asynchronous node.js library for the Bittrex API https://bittrex.com/",
  "keywords": [
    "btc",
    "xbt",
    "bitcoin",
    "altcoin",
    "bittrex"
  ],
  "author": {
    "name": "Adrian Soluch",
    "url": " https://github.com/n0mad01 "
  },
  "contributors": [],
  "license": "MIT",
  "dependencies": {
    "q": ">= 1.0.1",
    "request": ">= 2.35.0",
    "JSONStream": ">= 0.8.4",
    "event-stream": ">= 3.1.5"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/n0mad01/node.bittrex.api"
  },
  "main": "node.bittrex.api.js",
  "engines": {
    "node": ">=0.10"
  },
  "bugs": {
    "url": "https://github.com/n0mad01/node.bittrex.api/issues",
    "email": "adrian.soluch@gmail.com"
  },
  "homepage": "https://github.com/n0mad01/node.bittrex.api",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "readme": "Node Bittrex API\n=========\n\nNode Bittrex API is an asynchronous node.js library for the Bittrex API - https://bittrex.com/.\nThe Bittrex API data can be received either as a GET request or a Stream.\n\nDocumentation to the Bittrex API: https://bittrex.com/Home/Api\n\nInstallation\n----\ninstall it most convenient via npm:\n```sh\n$ npm install node.bittrex.api\n```\n\n##### or\n\nfetch the project via git:\n```sh\n$ git clone https://github.com/n0mad01/node.bittrex.api.git\n```\nthen meet the package dependencies:\n```sh\n$ cd node-bittrex-api/\n$ npm install\n```\n\nFirst steps\n----\n\ninclude node.bittrex.api.js into your project:\n```javascript\nvar bittrex = require('./node.bittrex.api.js');\n```\n\n##### configure\n```javascript\nbittrex.options({\n    'apikey' : API_KEY,\n    'apisecret' : API_SECRET, \n    'stream' : true,\n    'verbose' : true,\n    'cleartext' : false \n});\n```\n\nBy default the returned data is an object, in order to get clear text you have to add the option **cleartext** (streams will always return objects):\n```javascript\n'cleartext' : true\n```\n\nThe baseUrl itself can also be set via options\n```javascript\n'baseUrl' : 'https://bittrex.com/api/v1'\n```\n\nAfter configuration you can use the object right away:\nexample #1\n```javascript\nbittrex.getmarketsummaries( function( data ) {\n    for( var i in data.result ) {\n        bittrex.getticker( { market : data.result[i].MarketName }, function( ticker ) {\n            console.log( ticker );\n        });\n    }\n});\n```\nexample #2\n```javascript\nbittrex.getbalance({ currency : 'BTC' }, function( data ) {\n    console.log( data );\n});\n```\n\n\nStreams\n--\nTo activate Streaming simply add to your options:\n```javascript\n'stream' : true\n```\n\nStreaming depends on the following npm packages:\n- JSONStream https://www.npmjs.org/package/JSONStream\n- event-stream https://www.npmjs.org/package/event-stream\n\nOther\n--\n\nOther libraries utilized:\n- request https://www.npmjs.org/package/request\n- q https://www.npmjs.org/package/q\n\nFor HmacSHA512 this package is using a part of Crypto.js from google because the node crpyt package could not provide any appropriate result.\n- http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/hmac-sha512.js\n\nMethods\n----\n\nOptional parameters may have to be looked up at https://bittrex.com/Home/Api.\n\nNot all Bittrex API methods are implemented yet (and may never be), also some could have been forgotten in the documentation ( therefore i recomend you to consult the class code ).\n> Nonetheless the method **sendCustomRequest** enables completely custom requests anyway.\n\n##### sendCustomRequest \n- url           String\n- callback      Function\n- credentials   Boolean     optional    whether the credentials should be added to the url or not, default is set to false.\nexample #1\n```javascript\nvar url = 'https://bittrex.com/api/v1.1/public/getticker?market=BTC-LTC';\nbittrex.sendCustomRequest( uri, function( data ) {\n    console.log( data );\n});\n```\n\nexample #2 (credentials added to request/stream)\n```javascript\nbittrex.sendCustomRequest( 'https://bittrex.com/api/v1.1/account/getbalances?currency=BTC', function( data ) {\n    console.log( data );\n}, true );\n```\n\n##### getticker\n```javascript\nbittrex.getticker( { market : 'BTC-LTC' }, function( data ) {\n    console.log( data );\n});\n```\n\n##### getbalances\n```javascript\nbittrex.getbalances( function( data ) {\n    console.log( data );\n});\n```\n\n##### getmarkethistory\n```javascript\nbittrex.getmarkethistory({ market : 'BTC-LTC', count : 3 }, function( data ) {\n    console.log( data );\n});\n```\n\n##### getmarketsummaries\n```javascript\nbittrex.getmarketsummaries( function( data ) {\n    console.log( data );\n});\n```\n\n##### getorderbook\n```javascript\nbittrex.getorderbook({ market : 'BTC-LTC', depth : 10, type : 'both' }, function( data ) {\n    console.log( data );\n});\n```\n\n##### getwithdrawalhistory\n```javascript\nbittrex.getwithdrawalhistory({ currency : 'BTC', count : 1 }, function( data ) {\n    console.log( data );\n});\n```\n\n##### getdepositaddress\n```javascript\nbittrex.getdepositaddress({ currency : 'BTC' }, function( data ) {\n    console.log( data );\n});\n```\n\n##### getbalance\n```javascript\nbittrex.getbalance({ currency : 'BTC' }, function( data ) {\n    console.log( data );\n});\n```\n\n##### donations very welcome! \n> BTC\n```bash\n1N5T2VYACYKxK3UUDHhp7g69qtUmsDdAjZ\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "node.bittrex.api@0.1.6",
  "_shasum": "2ce9c546110a1e2fcf9753a1f502a1ca6fae7988",
  "_from": "node.bittrex.api@",
  "_resolved": "http://registry.npmjs.org/node.bittrex.api/-/node.bittrex.api-0.1.6.tgz"
}
